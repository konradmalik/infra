API_VERSION = "2"
REPO_PATH = "/home/vagrant/Code/infra/environments/dev"

Vagrant.configure(API_VERSION) do |config|
  # networking
  #config.vm.network :private_network, ip: "192.168.10.2"
  config.ssh.forward_agent = true

  # files syncing
  config.vm.synced_folder ".", REPO_PATH

  # provider settings
  config.vm.provider :virtualbox do |vb|
    vb.name = "devenv"
    vb.cpus = 2
    vb.memory = 2048
  end

  config.vm.define "jammy" do |jammy|
    jammy.vm.box = "ubuntu/jammy64"
    jammy.vm.provision "ansible_local" do |ansible|
      ansible.playbook = REPO_PATH + "/ansible/playbook.yml"
      ansible.inventory_path = REPO_PATH + "/ansible/inventory.yaml"
      ansible.limit  = "local"
      ansible.provisioning_path = REPO_PATH
      # set this just to force running galaxy
      ansible.galaxy_role_file = REPO_PATH + "/ansible/requirements.yml"
      ansible.galaxy_command = "ansible-galaxy collection install -r " + REPO_PATH + "/ansible/requirements.yml --force"
      ansible.verbose = true
      # disable private machine here
      ansible.extra_vars  = { private_machine: false }
    end
  end

  config.vm.define "arch" do |arch|
    arch.vm.box = "archlinux/archlinux"
    # https://bugs.archlinux.org/task/75661
    arch.vm.provision "shell", inline: "sudo pacman -S --noconfirm python-packaging"
    arch.vm.provision "ansible_local" do |ansible|
      ansible.playbook = REPO_PATH + "/ansible/playbook.yml"
      ansible.inventory_path = REPO_PATH + "/ansible/inventory.yaml"
      ansible.limit  = "local"
      ansible.provisioning_path = REPO_PATH
      # set this just to force running galaxy
      ansible.galaxy_role_file = REPO_PATH + "/ansible/requirements.yml"
      ansible.galaxy_command = "ansible-galaxy collection install -r " + REPO_PATH + "/ansible/requirements.yml --force"
      ansible.verbose = true
      # disable private machine here
      ansible.extra_vars  = { private_machine: false }
    end
  end
end
