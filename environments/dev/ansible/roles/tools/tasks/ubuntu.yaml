- name: install apt packages
  become: true
  apt:
    name:
      - moreutils
      - exa
      - gdb
      - curl
      - fzf
      - fd-find
      - jq
      - jo
      - jc
      - nodejs
      - npm
      - nq
      - sshfs
      - tree
      - stow
      - bat
      - ripgrep
      - shellcheck
      - tldr
      - direnv
      - zathura
      - bats
      - unzip
      - wget
      - zoxide
    state: latest
    update_cache: yes
    autoclean: yes
    autoremove: yes
    # the last one required by bat/ripgrep
    dpkg_options: "force-confdef,force-confold,force-overwrite"

- name: link fd-find to fd
  file:
    src: /usr/bin/fdfind
    path: ~/.local/bin/fd
    state: link
    force: yes

- name: link bat
  become: true
  file:
    src: /usr/bin/batcat
    path: /usr/local/bin/bat
    state: link
    force: yes

- name: install non-classic snap packages
  become: true
  community.general.snap:
    name:
      - procs

- name: Install pipx from pip
  pip:
    name: pipx

- name: install duf from git releases
  become: true
  shell:
    chdir: /tmp
    cmd: |
      curl -o duf.deb -L https://github.com/muesli/duf/releases/download/v{{ git_versions.duf }}/duf_{{ git_versions.duf }}_{{ ansible_system | lower }}_{{ arch_map[ansible_architecture] }}.deb
      dpkg -i duf.deb
      rm -rf duf.deb
    creates: /usr/bin/duf

- name: install 'hyperfine' from cargo
  environment:
    PATH: "{{ home_path }}/.cargo/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: cargo install --locked hyperfine
    creates: "~/.cargo/bin/hyperfine"

- block:
    - name: install up from github
      become: true
      shell:
        chdir: /tmp
        cmd: |
          curl -LO https://github.com/akavel/up/releases/latest/download/up
          install up /usr/local/bin/
        creates: /usr/local/bin/up

    - name: install viddy from github
      become: true
      shell:
        chdir: /tmp
        cmd: |
          curl -L https://github.com/sachaos/viddy/releases/download/v{{ git_versions.viddy }}/viddy_{{ git_versions.viddy }}_{{ ansible_system }}_{{ ansible_architecture }}.tar.gz | tar xvfz -
          install viddy /usr/local/bin/
        creates: /usr/local/bin/viddy

    - name: install dsq from git (ubuntu amd64)
      become: true
      shell:
        chdir: /tmp
        cmd: |
          curl -LO "https://github.com/multiprocessio/dsq/releases/download/v{{ git_versions.dsq }}/dsq-linux-x64-v{{ git_versions.dsq }}.zip"
          unzip dsq-*-v{{ git_versions.dsq }}.zip
          install dsq /usr/local/bin/dsq
        creates: /usr/local/bin/dsq

  when: ansible_architecture == "x86_64"

- name: install croc
  become: true
  shell:
    chdir: /tmp
    cmd: |
      curl https://getcroc.schollz.com | bash
    creates: /usr/local/bin/croc

- name: install 'watchexec' from cargo
  environment:
    PATH: "{{ home_path }}/.cargo/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: cargo install --locked watchexec-cli
    creates: "~/.cargo/bin/watchexec"

- name: install ripgrep-all deps
  become: true
  apt:
    name:
      - pandoc
      - poppler-utils
      - ffmpeg
      - tesseract-ocr
    state: latest
    update_cache: yes
    autoclean: yes
    autoremove: yes

- name: install 'ripgrep-all' from cargo
  environment:
    PATH: "{{ home_path }}/.cargo/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: cargo install --locked ripgrep_all
    creates: ~/.cargo/bin/rga

- name: install 'dust' from cargo
  environment:
    PATH: "{{ home_path }}/.cargo/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: cargo install --locked du-dust
    creates: ~/.cargo/bin/dust

- name: install 'bottom' from cargo
  environment:
    PATH: "{{ home_path }}/.cargo/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: cargo install --locked bottom
    creates: ~/.cargo/bin/btm

- name: install 'sad' from cargo
  environment:
    PATH: "{{ home_path }}/.cargo/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: cargo install --locked --all-features --git https://github.com/ms-jpq/sad --branch senpai
    creates: ~/.cargo/bin/sad

- name: install 'sd' from cargo
  environment:
    PATH: "{{ home_path }}/.cargo/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: cargo install --locked sd
    creates: ~/.cargo/bin/sd

- name: install pre-commit from pip via pipx
  environment:
    PATH: "{{ home_path }}/.local/bin:{{ ansible_env.PATH }}"
  shell:
    cmd: pipx install pre-commit
    creates: ~/.local/bin/pre-commit

- name: install prettier globally
  become: true
  community.general.npm:
    name: "{{ item }}"
    global: yes
  with_items:
    - prettier

- name: install shfmt binary
  become: true
  shell:
    chdir: /tmp
    cmd: |
      curl -o shfmt -L https://github.com/mvdan/sh/releases/download/v{{ git_versions.shfmt }}/shfmt_v{{ git_versions.shfmt }}_linux_{{ arch_map[ansible_architecture] }} \
      && install shfmt /usr/local/bin/
    creates: /usr/local/bin/shfmt
